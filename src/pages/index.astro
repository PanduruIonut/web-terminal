---
import Layout from "../layouts/Layout.astro";
import Terminal from "../components/Terminal.astro";
---

<script>
	const hints = [
		"Press [cmd] & [>] to speed up typing",
		"Press [cmd] & [<] to slow down typing",
		"Press [cmd] & [k] to clear the terminal",
		"Press [cmd] & [m] to toggle sounds",
		"Press [ctrl] & [c] to cancel the current command",
		"Press [ctrl] & [l] to clear the terminal",
		"Press [cmd] & [esc] to clear the input",
		"Type mute to mute the typing sound",
	];
	let hintIndex = 0;

	const displayNextHint = () => {
		const hintElement = document.querySelector(".hints");
		if (hintElement) {
			hintElement.innerHTML = hints[hintIndex] ?? "";
			highlightCommands(hints[hintIndex] ?? "", hintElement);
			hintElement.setAttribute("style", "opacity: 0.7;");
			setTimeout(() => {
				hintElement.setAttribute("style", "opacity: 0;");
			}, 2000);
			hintIndex = (hintIndex + 1) % hints.length;
		}
	};

	function highlightCommands(hint: string, hintElement: Element) {
		const commands = hint.match(/\[(.*?)\]/g);
		if (commands) {
			console.log(commands);
			const cmd1 = document.createElement("span");
			const cmd2 = document.createElement("span");
			cmd1.textContent = commands[0];
			cmd2.textContent = commands[1] ? commands[1] : "";
			cmd1.setAttribute("style", "color:#ff9e64;");
			cmd2.setAttribute("style", "color:#2ac3de;");

			let highlightedHint = hint;
			if (commands) {
				highlightedHint = highlightedHint.replace(
					commands[0],
					cmd1.outerHTML
				);
				if (commands[1]) {
					highlightedHint = highlightedHint.replace(
						commands[1],
						cmd2.outerHTML
					);
				}
			}
			hintElement.innerHTML = highlightedHint;
		}
	}

	displayNextHint();

	setInterval(displayNextHint, 3500);
</script>

<Layout title="shell.me">
	<main>
		<div class="content-container">
			<Terminal />
			<div class="hints"></div>
		</div>
	</main>
</Layout>

<style>
	html {
		background-color: #1a1b26;
	}

	body {
		margin: 0;
		padding: 0;
		overflow: auto;
	}

	main {
		width: 100vw;
		height: 100vh;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	main {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
		/* margin-top:30px; */
	}

	.content-container {
		display: flex;
		flex-direction: column;
		align-items: center;
	}

	.hints {
		color: white;
		opacity: 0.7;
		font-size: 0.9rem;
		margin-top: 1rem;
		text-align: center;
		font-family: "Fira Code", monospace;
		height: 10px;
		transition: opacity 2s;
		margin-top: 40px;
	}
</style>
